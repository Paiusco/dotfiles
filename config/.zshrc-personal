#My Personal Aliases
alias vim="nvim"
alias br="setxkbmap br"
alias us="setxkbmap us"

alias less="bat"

alias ls="exa -F --group-directories-first"
alias ll="exa -F --group-directories-first -l"
alias la="exa -F --group-directories-first -a"
alias lla="exa -F  --group-directories-first -la"
alias tree="exa -F --group-directories-first -T -L"

# Pacman aliases
alias installed="pacman -Qet"
alias dep="pactree -u"
alias dep_reverse="pactree -r"

#Git specific aliases
alias ga="git add"
alias gc="git commit -v"
alias gca="git commit -av"
alias gco="git checkout"
alias gamen="git commit --amend"
alias gpl="git pull"
alias gps="git push"
alias gs="git status"
alias gd="git diff"

# Exporting variable for bitwarden
export BW_CLIENTSECRET="Ok35LSim1+Ygp//m1/D4iNpLyWWyTYjtcMk63EVA4+3rVE6Euve3qysINN2o4a0yXnEEqiQYUYxbXrUwq9xdPw=="


#start of completions.zsh=======================================================
zmodload -i zsh/complist

WORDCHARS=''

unsetopt menu_complete   # do not autoselect the first completion entry
unsetopt flowcontrol
setopt auto_menu         # show completion menu on successive tab press
setopt complete_in_word
setopt always_to_end

bindkey -M menuselect '^o' accept-and-infer-next-history

# Case insensitive and '-' '_' insensitve
zstyle ':completion:*' matcher-list 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|=*' 'l:|=* r:|=*'
# Dunno
zstyle ':completion:*' special-dirs true
# Completion should be colourful
zstyle ':completion:*' list-colors ''
# Possibility to choose option with key arrows
zstyle ':completion:*:*:*:*:*' menu select
# Dunno
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
# Dunno
zstyle ':completion:*:*:*:*:processes' command "ps -u $USERNAME -o pid,user,comm -w -w"
# Disable named-dir autocompletion
zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories

# Use caching so that commands like apt and dpkg complete are useable (useful w/o ohmyzsh?)
zstyle ':completion:*' use-cache yes
zstyle ':completion:*' cache-path $ZSH_CACHE_DIR

# Don't complete uninteresting users
zstyle ':completion:*:*:*:users' ignored-patterns \
        adm amanda apache at avahi avahi-autoipd beaglidx bin cacti canna \
        clamav daemon dbus distcache dnsmasq dovecot fax ftp games gdm \
        gkrellmd gopher hacluster haldaemon halt hsqldb ident junkbust kdm \
        ldap lp mail mailman mailnull man messagebus  mldonkey mysql nagios \
        named netdump news nfsnobody nobody nscd ntp nut nx obsrun openvpn \
        operator pcap polkitd postfix postgres privoxy pulse pvm quagga radvd \
        rpc rpcuser rpm rtkit scard shutdown squid sshd statd svn sync tftp \
        usbmux uucp vcsa wwwrun xfs '_*'

# ... unless we really want to.
zstyle '*' single-ignored show

# make sure that '..' is completed with '/'
zstyle ':completion:*' special-dirs true


if [[ ${COMPLETION_WAITING_DOTS:-false} != false ]]; then
  expand-or-complete-with-dots() {
    # use $COMPLETION_WAITING_DOTS either as toggle or as the sequence to show
    [[ $COMPLETION_WAITING_DOTS = true ]] && COMPLETION_WAITING_DOTS="%F{red}â€¦%f"
    # turn off line wrapping and print prompt-expanded "dot" sequence
    printf '\e[?7l%s\e[?7h' "${(%)COMPLETION_WAITING_DOTS}"
    zle expand-or-complete
    zle redisplay
  }
  zle -N expand-or-complete-with-dots
  # Set the function as the default tab completion widget
  bindkey -M emacs "^I" expand-or-complete-with-dots
  bindkey -M viins "^I" expand-or-complete-with-dots
  bindkey -M vicmd "^I" expand-or-complete-with-dots
fi

# automatically load bash completion functions
autoload -U +X bashcompinit && bashcompinit
#end of completion.zsh==========================================================

## History command configuration
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt share_history          # share command history data


 # [Shift-Tab] - move through the completion menu backwards
if [[ -n "${terminfo[kcbt]}" ]]; then
  bindkey -M emacs "${terminfo[kcbt]}" reverse-menu-complete
  bindkey -M viins "${terminfo[kcbt]}" reverse-menu-complete
  bindkey -M vicmd "${terminfo[kcbt]}" reverse-menu-complete
fi

 # Edit the current command line in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line


#Run Starship
eval "$(starship init zsh)"
